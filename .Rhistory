scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage("Model selection",
titlePanel("Association between Age and Ideological Self-Placement"),
sidebarLayout(position = "right",
sidebarPanel(
checkboxGroupInput("checkGroup_age", label = "Country",
choices = levels(ideo_age_adj$country),
selected = levels(ideo_age_adj$country)),
width = 2),
mainPanel(ggiraphOutput("plot_age"), width = 10)))
server <- function(input, output) {
plot_age_data <- reactive({
data_age <- filter(ideo_age_adj)
if (is.null(data_age))
return(NULL)
if (!is.null(input$checkGroup_age))
data_age <- data_age[data_age$country %in% input$checkGroup_age, ]
return(data_age)
})
output$plot_age <- renderggiraph({
plot_age_data() %>%
ggplot(aes(x = S020, y = ideo_age_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
labs(caption = "Linear regression coefficients controled for education, higher coefficients indicate stronger association between older age-right wing and younger age-left wing") +
scale_y_continuous("Age-Ideology association") +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_age_adj$country)))),
name = "Country", drop = F) -> gg_plot_age
girafe(code = print(gg_plot_age), width_svg = 15)
})
}
# Run the application
shinyApp(ui = ui, server = server)
ggplot(aes(x = S020, y = ideo_age_adj, color = country), data = ideo_age_adj) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
labs(caption = "Linear regression coefficients controled for education, higher coefficients indicate stronger association between older age-right wing and younger age-left wing") +
scale_y_continuous("Age-Ideology association") +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_age_adj$country)))),
name = "Country", drop = F) -> gg_plot_age
girafe(code = print(gg_plot_age), width_svg = 15)
ideo_age_adj <- ideo_age_adj[sort(ideo_age_adj$country, ideo_age_adj$S020), ]
ideo_age_adj[sort(ideo_age_adj$country, ideo_age_adj$S020), ]
ideo_age_adj <- ideo_age_adj[order(ideo_age_adj$country, ideo_age_adj$S020), ]
View(ideo_age_adj)
ideo_age_list <- ideo_age_adj %>% dlply("country")
lapply(ideo_age_list, function(x) {
dim(x)[2]
})
lapply(ideo_age_list, function(x) {
x[dim(x)[2], 2] - x[1, 2]
})
0.0077698332+0.001444396
class(ideo_age_adj$ideo_age_adj)
-0.009947187 - -0.019500356
lapply(ideo_age_list, function(x) {
(x[dim(x)[2], 2]) - (x[1, 2])
})
-0.009947187 - -0.019500356
lapply(ideo_age_list, function(x) {
dim(x)[2]
})
lapply(ideo_age_list, function(x) {
dim(x)[1]
})
lapply(ideo_age_list, function(x) {
(x[dim(x)[1], 2]) - (x[1, 2])
})
lapply(ideo_age_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
})
lapply(ideo_age_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
}) %>%
do.call(rbind.data.frame, .)
lapply(ideo_age_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country = row.names(.), .)
lapply(ideo_age_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country = row.names(.), .) -> coeff_delt
lapply(ideo_age_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country = row.names(.), .) -> coeff_delt_age
ideo_age_adj <- left_join(ideo_age_adj, coeff_delt_age)
View(coeff_delt_age)
mean(coeff_delt_age$coeff_delt)
ideo_edu_list <- ideo_edu_adj %>% dlply("country")
lapply(ideo_edu_list, function(x) {
delt <- (x[dim(x)[1], 2]) - (x[1, 2])
return(data.frame(coeff_delt = delt))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country = row.names(.), .) -> coeff_delt_edu
View(coeff_delt_edu)
mean(coeff_delt_edu$coeff_delt)
table(W_EVS$edu)
W_EVS <- W_EVS %>% mutate(edu_flip = 8 - edu)
cw_list <- W_EVS %>% dlply('country_wave')
lapply(cw_list, function(x) {
filter(x, !is.na(self_ideo) & !is.na(edu_flip) & !is.na(X003))
}) %>%
.[sapply(., function(x) {
dim(x)[1] > 0
})] %>%
lapply(function(x) {
model <- lm(self_ideo ~ edu_flip + X003, data = x, weights = S017)
return(data.frame(ideo_edu_adj = model$coefficients[2]))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country_wave = row.names(.), .) -> ideo_edu_adj
combined_edu_adj <- sort(union(levels(W_EVS$country_wave), levels(ideo_edu_adj$country_wave)))
left_join(mutate(ideo_edu_adj, country_wave = factor(country_wave, levels = combined_edu_adj)),
mutate(unique(dplyr::select(W_EVS, country_wave, country, S020)),
country_wave = factor(country_wave, levels = combined_edu_adj))) -> ideo_edu_adj
ideo_edu_adj %>% mutate(S020 = as.Date(ISOdate(S020, 1, 1))) %>%
mutate(country = droplevels(country)) -> ideo_edu_adj
View(ideo_edu_adj)
ui <- fluidPage(titlePanel("Association between Education and Ideological Self-Placement Over Time"),
sidebarLayout(position = "right",
sidebarPanel(
checkboxGroupInput("checkGroup_edu", label = "Country",
choices = levels(ideo_edu_adj$country),
selected = c(ideo_edu_adj$country)),
width = 2),
mainPanel(ggiraphOutput("plot_edu"), width = 10)))
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1990-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
geom_smooth(method = "lm") +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1990-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_smooth() +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1990-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
?plot
plot(ideo_edu_adj$S020, ideo_edu_adj$ideo_edu_adj)
?plot
ggplot(aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj) + geom_smooth(method = "lm")
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_smooth(inherit.aes = F, aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj, method = "lm") +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1990-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
table(W_EVS$edu_flip)
W_EVS <- read.csv(text = url)
W_EVS <- W_EVS %>% mutate(RacRes = factor(RacRes, levels = c("Very low", "Low", "Moderate", "High", "Very high")))
W_EVS <- W_EVS %>% mutate(edu_flip = 9 - edu)
W_EVS <- W_EVS %>% mutate(ideo_flip = 11 - self_ideo)
cw_list <- W_EVS %>% dlply('country_wave')
## Create coefficient matrices
lapply(cw_list, function(x) {
filter(x, !is.na(ideo_flip) & !is.na(edu) & !is.na(X003))
}) %>%
.[sapply(., function(x) {
dim(x)[1] > 0
})] %>%
lapply(function(x) {
model <- lm(ideo_flip ~ edu + X003, data = x, weights = S017)
return(data.frame(ideo_edu_adj = model$coefficients[2]))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country_wave = row.names(.), .) -> ideo_edu_adj
combined_edu_adj <- sort(union(levels(W_EVS$country_wave), levels(ideo_edu_adj$country_wave)))
left_join(mutate(ideo_edu_adj, country_wave = factor(country_wave, levels = combined_edu_adj)),
mutate(unique(dplyr::select(W_EVS, country_wave, country, S020)),
country_wave = factor(country_wave, levels = combined_edu_adj))) -> ideo_edu_adj
ideo_edu_adj %>% mutate(S020 = as.Date(ISOdate(S020, 1, 1))) %>%
mutate(country = droplevels(country)) -> ideo_edu_adj
ui <- fluidPage(titlePanel("Association between Education and Ideological Self-Placement Over Time"),
sidebarLayout(position = "right",
sidebarPanel(
checkboxGroupInput("checkGroup_edu", label = "Country",
choices = levels(ideo_edu_adj$country),
selected = c(ideo_edu_adj$country)),
width = 2),
mainPanel(ggiraphOutput("plot_edu"), width = 10)))
### Server
### Server
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
geom_smooth(inherit.aes = F, aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj, method = "lm") +
labs(caption = "Regression coefficients, controled for age \nhigher coefficients indicate stronger association between educational attainment and self-identification as left-wing") +
scale_y_continuous("Education-Ideology Association", breaks = c(-.3, -.2, -.1, 0, .1, .2, .3)) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
### Server
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
geom_smooth(inherit.aes = F, aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj, method = "lm") +
labs(caption = "Regression coefficients, controled for age \nHigher coefficients indicate stronger association between educational attainment and self-identification as left-wing") +
scale_y_continuous("Education-Ideology Association", breaks = c(-.3, -.2, -.1, 0, .1, .2, .3)) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
coord_cartesian(xlim = c(as.Date(c("1989-01-01", "2013-01-01"))), ylim = c(-.3, .3)) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
geom_smooth(inherit.aes = F, aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj, method = "lm") +
labs(caption = "Regression coefficients, controled for age \nHigher coefficients indicate stronger association between educational attainment and self-identification as left-wing") +
scale_y_continuous("Education-Ideology Association", breaks = c(-.3, -.2, -.1, 0, .1, .2, .3)) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
coord_cartesian(xlim = c(as.Date(c("1990-01-01", "2012-01-01"))), ylim = c(-.3, .3)) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
### UI
ui <- fluidPage(titlePanel("Association between Education and Ideological Self-Placement Over Time"),
sidebarLayout(position = "right",
sidebarPanel(
checkboxGroupInput("checkGroup_edu", label = "Country",
choices = levels(ideo_edu_adj$country),
selected = c("United States", "Germany", "Great Britain",
"France", "Canada", "Australia")),
width = 2),
mainPanel(ggiraphOutput("plot_edu"), width = 10)))
### Server
server <- function(input, output) {
plot_data_edu <- reactive({
dat_edu <- filter(ideo_edu_adj)
if (is.null(dat_edu))
return(NULL)
if (!is.null(input$checkGroup_edu))
dat_edu <- dat_edu[dat_edu$country %in% input$checkGroup_edu, ]
return(dat_edu)
})
output$plot_edu <- renderggiraph({
plot_data_edu() %>%
ggplot(aes(x = S020, y = ideo_edu_adj, color = country)) +
geom_point_interactive(aes(tooltip = country_wave), size = 2) +
geom_path(arrow = arrow(length = unit(.1, "inches")), size = 1) +
geom_smooth(inherit.aes = F, aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj, method = "lm") +
labs(caption = "Regression coefficients, controled for age \nHigher coefficients indicate stronger association between educational attainment and self-identification as left-wing") +
scale_y_continuous("Education-Ideology Association", breaks = c(-.3, -.2, -.1, 0, .1, .2, .3)) +
scale_x_date("Year", date_breaks = "1 year", date_labels = "%Y", limits = as.Date(c("1989-01-01", "2013-01-01"))) +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 13),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
legend.key.size = unit(.15, "inches"), axis.text.x = element_text(size = 7.9),
axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "black", size = .25),
plot.margin = unit(c(0, 0, 0, 0), "cm")) +
coord_cartesian(xlim = c(as.Date(c("1990-01-01", "2012-01-01"))), ylim = c(-.3, .3)) +
scale_color_manual(values = c(rainbow_hcl(length(unique(ideo_edu_adj$country)))),
name = "Country", drop = F) -> gg_plot_edu
girafe(code = print(gg_plot_edu), width_svg = 15)
})
}
shinyApp(ui = ui, server = server)
# Load packages & data
library(shiny)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(survey)
library(rvest)
library(plyr)
library(broom)
library(knitr)
library(RCurl)
library(stargazer)
library(reshape2)
url <- getURL("https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/W_EVS_clean.csv")
# Load packages & data
library(shiny)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(survey)
library(rvest)
library(plyr)
library(broom)
library(knitr)
library(RCurl)
library(stargazer)
library(reshape2)
library(gridExtra)
library(ggiraph)
library(colorspace)
library(MASS)
library(lubridate)
url <- getURL("https://raw.githubusercontent.com/jordan-klein/internationalLeft/master/W_EVS_clean.csv")
W_EVS <- read.csv(text = url)
W_EVS <- W_EVS %>% mutate(RacRes = factor(RacRes, levels = c("Very low", "Low", "Moderate", "High", "Very high")))
W_EVS <- W_EVS %>% mutate(edu_flip = 9 - edu)
W_EVS <- W_EVS %>% mutate(ideo_flip = 11 - self_ideo)
cw_list <- W_EVS %>% dlply('country_wave')
form_c <- read.csv("countries.csv")
View(form_c)
## Create coefficient matrices
lapply(cw_list, function(x) {
filter(x, !is.na(ideo_flip) & !is.na(edu) & !is.na(X003))
}) %>%
.[sapply(., function(x) {
dim(x)[1] > 0
})] %>%
lapply(function(x) {
model <- lm(ideo_flip ~ edu + X003, data = x, weights = S017)
return(data.frame(ideo_edu_adj = model$coefficients[2]))
}) %>%
do.call(rbind.data.frame, .) %>%
data.frame(country_wave = row.names(.), .) -> ideo_edu_adj
combined_edu_adj <- sort(union(levels(W_EVS$country_wave), levels(ideo_edu_adj$country_wave)))
left_join(mutate(ideo_edu_adj, country_wave = factor(country_wave, levels = combined_edu_adj)),
mutate(unique(dplyr::select(W_EVS, country_wave, country, S020)),
country_wave = factor(country_wave, levels = combined_edu_adj))) -> ideo_edu_adj
ideo_edu_adj %>% mutate(S020 = as.Date(ISOdate(S020, 1, 1))) %>%
mutate(country = droplevels(country)) -> ideo_edu_adj
ideo_edu_adj <- left_join(ideo_edu_adj, form_c, by = c("country", "Country"))
ideo_edu_adj <- left_join(ideo_edu_adj, form_c, by = c("country" = "Country"))
ideo_nc <- filter(ideo_edu_adj, ever_communist == "No")
View(ideo_nc)
ggplot(aes(x = S020, y = ideo_edu_adj), data = ideo_nc) + geom_smooth(method = "lm")
ggplot(aes(x = S020, y = ideo_edu_adj), data = ideo_edu_adj) + geom_smooth(method = "lm")
lm(ideo_edu_adj ~ S020, data = ideo_edu_adj)
lm(ideo_edu_adj ~ S020, data = ideo_edu_adj) %>%
summary()
lm(ideo_edu_adj ~ S020, data = ideo_nc) %>%
summary()
